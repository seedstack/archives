<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://seedstack.org/archives/16.7/tags/transport/index.xml</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="http://seedstack.org/archives/16.7/tags/transport/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Transports</title>
      <link>http://seedstack.org/archives/16.7/addons/web-services/transports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/archives/16.7/addons/web-services/transports/</guid>
      <description>

&lt;p&gt;The WS add-on supports HTTP and JMS transports. Each URL syntax described below.&lt;/p&gt;

&lt;h1 id=&#34;standalone-http&#34;&gt;Standalone HTTP&lt;/h1&gt;

&lt;p&gt;In a standalone environment you need to specify the full URL with the binding address and the port:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://localhost:4578/ws/hello
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;web-server-http&#34;&gt;Web server HTTP&lt;/h1&gt;

&lt;p&gt;In a Web server environment you only need to specify the URL pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/ws/hello
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;jms&#34;&gt;JMS&lt;/h1&gt;

&lt;p&gt;JMS URIs are unchanged whatever the environment. They conform to the &lt;a href=&#34;http://www.w3.org/TR/soapjms/&#34;&gt;SOAP JMS specification&lt;/a&gt;.
There are three lookup variants to retrieve connection factories and destinations:&lt;/p&gt;

&lt;h2 id=&#34;jndi-lookup&#34;&gt;JNDI lookup&lt;/h2&gt;

&lt;p&gt;This variant allows to retrieve the connection factory and the destination from JNDI:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jms:jndi:lookupNameForDestination?jndiConnectionFactoryName=lookupNameForConnectionFactory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the minimal required URI where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lookupNameForDestination&lt;/code&gt; is the configured JNDI name of the JMS destination listened on.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lookupNameForConnectionFactory&lt;/code&gt; is the configured JNDI name of the Connection Factory&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;jndiInitialContextFactory=fully.qualified.classname.of.jndi.initial.context.factory&amp;amp;jndiURL=url://to/jndi/context&amp;amp;jndiConnectionFactoryName=lookupNameForConnectionFactory&amp;amp;replyToName=REPLY.DESTINATION.NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;replyToName&lt;/code&gt; parameter can be omitted in which case the implementation will create a temporary queue for the response.&lt;/p&gt;

&lt;h2 id=&#34;queue-lookup&#34;&gt;Queue lookup&lt;/h2&gt;

&lt;p&gt;This variant allows to directly specify a queue name using a connection factory from the one(s) configured via the Seed JMS plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jms:queue:QUEUE.NAME?connectionFactoryName=nameOfConfiguredConnectionFactory&amp;amp;replyToName=REPLY.QUEUE.NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;replyToName&lt;/code&gt; can be omitted in which case the implementation will create a temporary queue for the response.&lt;/p&gt;

&lt;h2 id=&#34;topic-lookup&#34;&gt;Topic lookup&lt;/h2&gt;

&lt;p&gt;This variant allows to directly specify a queue name using a connection factory from the one(s) configured via the Seed JMS plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jms:topic:TOPIC.NAME?connectionFactoryName=nameOfConfiguredConnectionFactory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;topicReplyToName&lt;/code&gt; can be omitted in which case the implementation will create a temporary queue for the response (not a temporary topic).&lt;/p&gt;

&lt;h2 id=&#34;message-type&#34;&gt;Message type&lt;/h2&gt;

&lt;p&gt;The Web-Services add-on uses binary JMS messages by default as &lt;a href=&#34;https://www.w3.org/TR/soapjms/#textmessage-considerations&#34;&gt;they have a number of advantages over text messages&lt;/a&gt;.
In case you want to force the use of text messages, you can do so by specifying the &lt;code&gt;messageType&lt;/code&gt; parameter in the URI, as in this example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jms:queue:QUEUE.NAME?connectionFactoryName=nameOfConfiguredConnectionFactory&amp;amp;messageType=text
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>